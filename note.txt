Angular
-------
npm-node package manager
 -> npm -v

install
 ->npm i -g @angular/cli@latest        ng v(checking)

project creation
    ->ng new projectname

running command
  ->ng serve --open             ng s -open(shortcut to open)

Angular tectnologies
 -html(content loading)
 -css
 -typescript(dynamic)

typescript: super set of js
difference- define types for variables ie, typescript is stricty typed language , js dynamic
            eg: num:number (after this)-(num=8)
                num:string
                num:any(don't know type of data)

                transpiling: proccess to convert ts to js while running
                ------------
typescript running engine is not available---at runningtime typescript code convert into javascript code and run- don by browser
-better than js(depending on type of data)



creating angular project
-root module
  -rootcomponent(parent component)
    -we can create sub component inside the root module
  -sub module 
     -component
     ..........etc....


Module -ts file called modules-collection of components-used to manage components under module.
component-page -(ts-logic,css-style and html-content files) component create
       - selector -to display component -by calling selector 

  

working Cylce of angular component
---------------------------------

constructor -->ngOnInit() -->other methods(user define)


dom methods form data access not work in angular

Data Binging in Angular
-----------------------
->ts- component
->html-view

(1)-One-way binding(one direction)
-------------------
ts file -htmlfile or visversa
--(1.1)-ts to html(component to view sharing):

           -1-String interpolation -symbol- {}-(for string shareing) ={{data}}
           -2-Property Binding -[propertyname]="data"  

--(1.2)-html-ts(view-component):
            -1-Event Binding- (eventname)="method()" //just happens
            -2- $Event binding- (eventname)="method($event)" -value of events access when event happens
            -3-Event binding with template rendering variable =#varname

(2)-Two way binding
-------------------

2.1-ngModel  -[(ngModel)]="variable"
      -FormsModule -module uesd for ngModel method


path setting
------------

-path set in - rootmodule routing file.
-Each page need different paths
-landing page paths is empty-localhost/4200(landing page has no path)
-



Redirection in Angular
----------------------

method is - navigateByUrl(path)
class of method -Router
Module of class -AppRoutingModule

(folder-file-class-methods
package-module-class )


-Dependency Injection
----------------------
To use a method of class in another class we use this method.
 -method applied on constructors
             syntax-access specifier reference:classname


        {-access specifiers - private,public
          -if public -the method can be used by all class in file where Dependency Injection performed.
          -if private -the method can only in injected class not in other class i file.
        }
           
Angular Service
--------------
Its  a file in angular
All copmonent can access the content of service file.
command used: ng g s filename


Angular Directives dom manupulate
---------------------
(data from array to html file)

-used to manupulate the DOM 
-1-Component Directive-creating component structureof dom chaneges

-2-Structural Directives-(array or object data access,then structure changes).change the structureof dom by array or object.
   
   -*ngFor-loop in html form
   -*ngIf- condition in html form

-3-Attribute Directives-control Attributes 
       -[ngClass]

Form validation in Angular
-------------------------------

-form can be created in two ways

   -template driven form
   -model driven form

 Model drivenform creation
 
  1-reactive form
  - module used to create reactive model form- 
                Module - ReactiveFormsModel
                class - FormBuilder
  -a model contains 
              -form group
              - array
              - controller


Local Storage in Angular
------------------------

->CRUD 
->Create :localstorage.setItem()
->Read :localstorage.getItem()
->Update:localstorage.setItem()
->Delete:localstorage.removeItem()
  
child parent communication in Angular
---------------------------------------

       parent to child data sharing
      -----------------------------

           ->syntax @Input() var:string|undefined -variable initialisation
           ->@Input- decorator used in parent to child data shareing



current date and time in Angular
-------------------------------

-Date : class used to access current date and time in angular.

Angular pipes
------------

-used to convert datas into another format.





